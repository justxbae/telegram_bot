
from aiogram import types, Dispatcher
from create_bot import dp, bot
from keyboars import kb_client, kb_client_two, kb_client_main
from aiogram.utils.markdown import link





@dp.message_handler(commands=["start"])
async def commands_start(message : types.Message):
   try:
      await bot.send_message(message.from_user.id, '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n–°–≤–µ—Ç–ª–∞–Ω–∞,–¥–æ–±—Ä—ã–π –¥–µ–Ω—å. –ê –≤—ã —É–∂–µ –≥–æ—Ç–æ–≤—ã –ø–æ–π—Ç–∏ –Ω–∞–ø–µ—Ä?\n \
     –ï—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∞–∂–∏–º–∞–π —Å–∫–æ—Ä–µ–µ "–î–∞". –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–∫–∏–Ω—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞. –ú—ã –ø—Ä–æ—Ç–∏–≤ —Ç—Ä–µ–∑–≤–µ–Ω–Ω–∏–∫–æ–≤...\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ', reply_markup=kb_client)
   except:
    await message.reply('–ß—Ç–æ–±—ã —è –º–æ–≥ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å, —Å–ø–µ—Ä–≤–∞ –Ω–∞–ø–∏—à–∏ –º–Ω–µ:\n@buhhoy_bot')




@dp.message_handler(lambda message: message.text == "–î–∞!üç∫")
async def agreement(message: types.Message):
   await message.reply("üá∑üá∫–ù–µ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–≤–æ–¥–∞ –≤—ã–ø–∏—Ç—å?üç∫\n–ù–µ –ø—Ä–æ–±–ª–µ–º–∞. \nüí•–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∏ –±—É—Ö–∞–π —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ!üí•", reply_markup=kb_client_two)



@dp.message_handler(lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚öô')
async def back(msg: types.Message):
    reply_text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    await msg.answer(reply_text, reply_markup=kb_client_main)


@dp.message_handler(lambda message: message.text == '–í –º–µ–Ω—é')
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    await message.answer("–í–æ—Ç –º–µ–Ω—é", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ üîí')
async def info(message: types.Message):
    text = link('quinwize', 'https://t.me/lovesputin')
    await message.reply('*–ë–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –∏–Ω—Ç–µ–ª–ª–µ–≥–µ–Ω—Ç–æ–º –∏ –≥–µ–Ω–∏–µ–º - *' + text, parse_mode="Markdown")


@dp.message_handler(lambda message: message.text == '–∏–Ω—Ñ–∞')
async def info_chat(message : types.Message):
    if message.text.lower() == '–∏–Ω—Ñ–∞':

        #links = link('quinwize', 'https://t.me/lovesputin')
        await message.answer('*–ë–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –∏–Ω—Ç–µ–ª–ª–µ–≥–µ–Ω—Ç–æ–º –∏ –≥–µ–Ω–∏–µ–º - *[quinwize](https://t.me/lovesputin) ', parse_mode="Markdown")
























def register_handlers_user(dp : Dispatcher):
    dp.register_message_handler(commands_start, commands=['start', 'help'])








'''
@dp.message_handler()
async def echo_send(message : types.Message):
    await message.reply(message.text)
    '''


